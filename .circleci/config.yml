version: 2.1

workflows:
  unit_tests:
    jobs:
      - job1

orbs:
  gcp-cli: circleci/gcp-cli@1.8.2

commands:
  configure_environment:
    description: "Initial environment setup: Configure Gcloud and installs Docker Compose."
    steps:
      - run:
          name: Authorize gcloud
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project velotio-playground

jobs:
  job1:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: Install command-line tools  # TODO: Custom image?
          command: |
            sudo apt-get -y update
            sudo apt-get install -y gnupg2

      - gcp-cli/install

      - configure_environment

      - run:
          name: gsutil copy
          command: |
            touch /tmp/test
            gsutil cp /tmp/test gs://aditi-test/test-${CIRCLE_BUILD_NUM}/

      - run:
          name: 1st job for unit tests
          command: |
            echo -e '
              <!DOCTYPE html>
              <html>
              <head>
              <style type="text/css">
              <!--
              .tab { margin-left: 40px; }
              -->
              </style>
              </head>
              <script>
                var buildno = "${CIRCLE_BUILD_NUM}";
              </script>
              <body>
              <p>&#9671; coverage reports</p>
              <p class="tab"> <a href="https://console.cloud.google.com/storage/browser/sm-circleci-artifacts/htmlcov-"+{{buildno}}+"/htmlcov/?project=sightmachine-178216&authuser=2&organizationId=81543687075">htmlcov/</a>
              </p>                                                                                                                           
              </body>
              </html>
            ' > /tmp/artifacts.html

      - store_artifacts:
          path: /tmp/artifacts.html
          destination: artifacts.html